name: build-push

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: |
          npm install

      - name: Build React app
        run: |
          npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get latest tag
        id: version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$latest_tag" ]; then
            new_version="0.0.1"
          else
            new_version=$(echo $latest_tag | awk -F'[.-]' '{printf "%d.%d.%d\n", $1, $2, $3 + 1}')
          fi
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/space-exploration-ui:${{ env.new_version }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/space-exploration-ui:${{ env.new_version }} ${{ secrets.DOCKER_USERNAME }}/space-exploration-ui:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/space-exploration-ui:latest

      - name: Push new tag
        if: success()
        run: |
          new_version="${{ env.new_version }}"
          while git rev-parse --quiet --verify "refs/tags/${new_version}"; do
            new_version=$(echo $new_version | awk -F'[.-]' '{printf "%d.%d.%d\n", $1, $2, $3 + 1}')
          done
          echo "Creating new tag: ${new_version}"
          git tag "${new_version}"
          git push origin "${new_version}"
